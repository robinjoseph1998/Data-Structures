package main

import (
	"fmt"
)

func captureForts(forts []int) int {
	var strt, end, count, max int

	for k := 0; k < len(forts); k++ {

		if forts[k] == 0 {
			strt = k - 1
			fmt.Println("strt", strt)
			count++
		} else {
			end = k
			if forts[strt] != forts[end] {
				fmt.Println("end", end)
				if count > max {
					max = count
				}
			}

		}
	}
	return max
}

func main() {

	forts := []int{-1, 1, 1, -1, -1, 0, -1, 1, 0, -1, 1, -1, 1, 0, 0, 1, 1, -1, -1, -1, 0, -1, 0, 1, 0, 0, -1, -1, 0, 0, 1, 1, 0, 0, 1, -1, 1, -1, 1, -1, -1, -1, 0, -1, 0, 1, 0, -1, 1, 0, -1, 1, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, 0, -1, -1, 0, -1, 1, -1, 1, -1, 0, 1, -1, 0, -1, 1, 0, -1, -1, 1, 0, 0, 1, 1, 0, 0, 0, 1, -1, 1, -1, 1, 0, 1, -1, 0, 1, -1, 1, 0, 0, 0, -1, 0, 1, 1, 0, 0, 0, 0, -1, 1, 1, 1, 0, 1, 1, -1, 1, -1, -1, 0, -1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, -1, -1, 0, 1, 1, -1, 1, -1, 1, 1, -1, 0, 1, 1, 1, -1, -1, -1, -1, 0, -1, -1, 1, 1, 0, 1, -1, -1, -1, 1, 0, 0, -1, 0, 0, -1, 1, -1, -1, 1, 1, 0, -1, 1, 0, 0, 0, -1, -1, 1, 0, 1, 1, 1, -1, 0, 1, 0, 0, 1, -1, 0, 1, 0, 0, 0, -1, 1, 1, 1, 1, -1, 1, -1, 1, 1, 0, 0, 0, -1, 1, -1, 1, 0, 1, 1, -1, 0, -1, 0, 0, 1, 1, 0, -1, -1, -1, 0, 0, -1, 1, -1, 1, 1, 1, -1, 1, 1, -1, 1, 1, 1, 0, -1, 1, -1, 0, -1, 1, -1, 1, 0, -1, 1, -1, 1, 1, -1, 1, -1, 1, 0, -1, 1, -1, -1, -1, -1, -1, 0, 0, -1, 0, 1, -1, 1, -1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, -1, 0, 0, 1, 0, 0, 0, -1, -1, -1, 1, 1, -1, -1, -1, 1, 0, -1, 0, 1, 1, 0, 1, -1, 0, -1, 1, 0, 1, 1, -1, 0, 0, -1, 0, -1, 1, 1, -1, -1, 1, -1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, -1, 0, 1, 0, 0, 1, 1, -1, 1, -1, 1, 1, 0, 1, 0, 1, 1, 1, 1, -1, -1, 1, -1, -1, -1, 0, 0, 1, 0, 1, 0, 1, 0, 1, -1, 0, 1, -1, -1, 0, 1, 1, 0, 0, 1, 1, 1, -1, -1, 1, 1, 0, 0, 1, -1, -1, 0, 0, -1, -1, -1, 1, 0, 0, 1, 0, -1, 1, -1, 0, 1, 0, 0, 0, -1, 1, 0, 0, -1, 0, -1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, -1, 0, 1, -1, -1, 0, -1, -1, 0, -1, 0, 0, 0, -1, 0, -1, 0, 1, 1, 1, -1, -1, -1, -1, -1, 0, -1, 1, 1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 0, 1, -1, 0, 1, 1, 1, -1, 1, 0, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -1, 0, 0, -1, 0, 0, 0, 1, -1, 0, 0, 0, 0, -1, -1, 1, 0, 1, 1, 0, 0, 1, 1, -1, 1, -1, 1, 0, 1, 0, 0, 0, -1, 1, 1, -1, 1, 0, 1, -1, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 1, 1, -1, 1, 1, 0, -1, -1, 0, -1, 1, -1, -1, -1, 1, -1, 1, 0, 1, 1, -1, 1, 0, 0, -1, 0, -1, -1, -1, 1, 0, -1, -1, 0, -1, -1, -1, 1, -1, 1, 0, -1, -1, 0, 1, 0, 1, -1, -1, -1, 0, -1, -1, -1, -1, 0, -1, 0, 1, -1, 0, 1, 1, -1, 1, 1, 1, 1, 1, 0, 0, -1, 0, 0, 0, 1, -1, 0, 1, 0, 1, 1, -1, -1, 0, 1, 1, -1, -1, 1, 0, 0, -1, -1, -1, 0, 1, 1, 1, 0, 0, 1, -1, 1, 1, 0, 0, 0, 1, -1, -1, 1, 0, 1, 0, 1, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, 0, 1, 1, 0, 0, 0, -1, 1, 0, -1, 1, 1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, -1, 0, 1, 0, -1, 1, -1, 0, -1, -1, 0, -1, -1, 0, -1, -1, 1, 1, 1, 0, -1, -1, 1, 1, 0, -1, 0, 0, 1, -1, 0, 1, -1, 0, 0, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, 1, 0, -1, 0, -1, -1, -1, -1, 0, 0, 0, -1, -1, 0, 0, -1, -1, 0, -1, 0, 1, 0, -1, -1, 0, 0, -1, 1, 1, 0, -1, 1, 0, 1, 0, 0, -1, 0, -1, 0, -1, -1, 0, 0, 0, 1, -1, 1, 0, 1, 1, 0, 1, 0, 1, -1, 1, 0, -1, -1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0, 1, 1, -1, -1, -1, 1, 0, -1, 1, -1, 1, 0, -1, -1, 0, 1, 0, -1, -1, 0, -1, 1, -1, 1, 1, 0, -1, -1, 1, -1, -1, 0, 0, -1, -1, 1, 1, 0, 0, 1, -1, 1, 0, 0, 0, 0, 1, -1, 1, 1, 0, 1, -1, -1, 1, 1, -1, -1, 0, 1, -1, 0, 0, 1, 0, -1, -1, -1, 1, -1, 0, 1, -1, -1, -1, 0, -1, -1, 1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 0, -1, 1, 0, -1, 1, 0, 0, 1, 1, 1, -1, -1, 1, 1, 1, 1, 0, -1, -1, 0, -1, -1, -1, 1, 1, 0, -1, 0, -1, 1, -1, 0, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, 0, -1, 1, 0, 1, 1, 0, -1, 1, 0, -1, 0, 0, 1, 1, 1, 1, -1, 1, 1, 1, -1, -1, 0, 0, -1, 0, -1, -1, 0, 0, -1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, -1, 1, -1}

	fmt.Println(captureForts(forts))
}
